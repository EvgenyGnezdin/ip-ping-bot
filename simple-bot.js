require('dotenv').config();

const  { Bot } =  require("grammy")
const  ping = require("ping")

const BOT_TOKEN = process.env.BOT_TOKEN_IP_PING_BBOT
console.log(BOT_TOKEN)
const bot = new Bot(BOT_TOKEN)

bot.command("start", (ctx) => {
  ctx.reply(`üåê –ë–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ IP\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ IP –∏–ª–∏ –¥–æ–º–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏\n\n–ü—Ä–∏–º–µ—Ä:\n8.8.8.8\ngoogle.com\n192.168.1.1`)
})

bot.on("message:text", async (ctx) => {
  const host = ctx.message.text.trim()
  try {
        const result = await ping.promise.probe(host, {
            timeout: 5,
            extra: ['-n', '4']
        });

        if (result.alive) {
            await ctx.reply(`‚úÖ ${host} - –î–û–°–¢–£–ü–ï–ù\n–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${result.time}ms`);
        } else {
            await ctx.reply(`‚ùå ${host} - –ù–ï–î–û–°–¢–£–ü–ï–ù`);
        }
    } catch (error) {
        await ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ ${host}`);
    }
});

bot.start();
console.log('ü§ñ –ü—Ä–æ—Å—Ç–æ–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
